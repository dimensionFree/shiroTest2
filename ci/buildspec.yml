version: 0.2

env:
  variables:
    CI_DATABASE_URL: "jdbc:mysql://localhost:3306"
    CI_DATABASE_USER: "root"
    CI_DATABASE_PASSWORD: "rootpassword"
  parameter-store:
    DB_URL: "/DB_URL"
    DB_USER: "/DB_USERNAME"
    DB_PASSWORD: "/DB_PASSWORD"
    MAIL_PASSWORD: "/MAIL_PASSWORD"
    MAIL_USERNAME: "/MAIL_USERNAME"

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - echo Pulling Redis Docker image...
      - docker pull redis:latest  # 拉取 Redis 镜像
      - echo Starting Redis container...
      - docker run -d --name redis -p 6379:6379 redis:latest  # 启动 Redis 容器
      - echo Pulling MySQL 8 Docker image...
      - docker pull mysql:8.0  # 指定 MySQL 8.0 版本
      - echo Starting MySQL container...
      - docker run -d --name mysql-test -e MYSQL_ROOT_PASSWORD=rootpassword -e MYSQL_DATABASE=testdb -p 3306:3306 mysql:8.0
      - sleep 20  # 等待 MySQL 完全启动
  pre_build:
    commands:
      - echo Doing mvn test...
      # 显示从 Parameter Store 获取的变量
      - echo DB_URL is $DB_URL
      - echo DB_USER is $DB_USER
      - echo DB_PASSWORD is $DB_PASSWORD
      - echo MAIL_PASSWORD is $MAIL_PASSWORD
      - echo MAIL_USERNAME is $MAIL_USERNAME
      # 显示从 设置的变量
      - echo DB_URL is $CI_DATABASE_URL
      - echo DB_USER is $CI_DATABASE_USER
      - echo DB_PASSWORD is $CI_DATABASE_PASSWORD
      # 在测试前设置环境变量
      - export DB_URL=$CI_DATABASE_URL
      - export DB_USERNAME=$CI_DATABASE_USER
      - export DB_PASSWORD=$CI_DATABASE_PASSWORD
      - export MAIL_PASSWORD=$MAIL_PASSWORD
      - export MAIL_USERNAME=$MAIL_USERNAME
      - mvn test
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - mvn package
      - docker build -t backend .
      - docker tag backend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/backend:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/backend:latest
      - echo Writing image definitions file...
      - printf '{"ImageURI":"%s.dkr.ecr.%s.amazonaws.com/backend:latest"}' $AWS_ACCOUNT_ID $AWS_DEFAULT_REGION > imageDetail.json
artifacts:
  files:
    - imageDetail.json
    - taskdef.json
    - appspec.yaml
